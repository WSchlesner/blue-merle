#!/bin/sh

. /lib/blue-merle/functions.sh
. /lib/functions/gl_util.sh

rm -f /tmp/blue-merle-stage1

mcu_send_message "Switch pulled.  Continuing..."
sleep 1
sim_switch on

leak=0

until gl_modem AT AT+CFUN=0 | grep -q OK
do
	mcu_send_message "CFUN=0 failed. Trying again."
	sleep 1
done

until gl_modem AT AT+CFUN=4 | grep -q OK
do
	leak=1
	mcu_send_message "CFUN=4 failed. Trying again."
	sleep 1
done

if [ $leak -eq 1 ]; then
	mcu_send_message "WARNING:        Reset took longer than expected."
	sleep 3
fi

sleep 1

old_imsi=$(cat /tmp/old_imsi)
new_imsi=$(READ_IMSI)

if [ "$old_imsi" = "$new_imsi" ]; then
	mcu_send_message "WARNING:        Old IMSI equals new IMSI. Did you swap the SIM?"
	sleep 3
fi

rm -f /tmp/old_imsi

# Read IMEI mode config from UCI config /etc/config/blue-merle
IMEI_MODE=$(uci -q get blue-merle.imei.mode 2>/dev/null)
STATIC_IMEI=$(uci -q get blue-merle.imei.static_value 2>/dev/null)

# Check if UCI read was successful and provide appropriate debug output
if [ -z "$IMEI_MODE" ]; then
    IMEI_MODE="random"
    logger -p notice -t blue-merle-stage2 "Couldn't Load Blue-Merle UCI Config"
    mcu_send_message "Defaulting to random mode"
    sleep 3
else
    logger -p notice -t blue-merle-stage2 "Config loaded: IMEI_MODE='$IMEI_MODE', STATIC_IMEI='$STATIC_IMEI'"
    mcu_send_message "Config: Mode=$IMEI_MODE"
    sleep 3
fi

# Ensure we have a valid mode
case "$IMEI_MODE" in
    "static"|"deterministic"|"random")
        # Valid modes, keep as is
        ;;
    *)
        logger -p warn -t blue-merle-stage2 "Invalid IMEI mode '$IMEI_MODE', defaulting to random"
        IMEI_MODE="random"
        ;;
esac

# Validate static IMEI if in static mode
if [ "$IMEI_MODE" = "static" ]; then
    if [ -z "$STATIC_IMEI" ] || [ ${#STATIC_IMEI} -ne 15 ] || ! echo "$STATIC_IMEI" | grep -q '^[0-9]*$'; then
        logger -p warn -t blue-merle-stage2 "Invalid static IMEI '$STATIC_IMEI', falling back to random mode"
        mcu_send_message "Invalid static   IMEI, using random"
        sleep 3
        IMEI_MODE="random"
    fi
fi

# Execute the appropriate IMEI generation based on mode
case "$IMEI_MODE" in
    "static")
        mcu_send_message "Setting static      IMEI: ${STATIC_IMEI:0:8}..."
        sleep 2
        logger -p notice -t blue-merle-stage2 "Setting static IMEI: $STATIC_IMEI"
        timeout 15 python3 /lib/blue-merle/imei_generate.py -s "$STATIC_IMEI"
        ;;
    "deterministic")
        mcu_send_message "Setting deterministic   IMEI from IMSI"
        sleep 2
        logger -p notice -t blue-merle-stage2 "Setting deterministic IMEI"
        timeout 15 python3 /lib/blue-merle/imei_generate.py -d
        ;;
    *)
        mcu_send_message "Setting random      IMEI"
        sleep 2
        logger -p notice -t blue-merle-stage2 "Setting random IMEI"
        timeout 15 python3 /lib/blue-merle/imei_generate.py -r
        ;;
esac

old_imei=$(cat /tmp/old_imei)
new_imei=$(READ_IMEI)

if [ "$old_imei" = "$new_imei" ]; then
	mcu_send_message "WARNING:        Old IMEI equals new IMEI."
	logger -p warn -t blue-merle-stage2 "IMEI unchanged: $old_imei"
	sleep 3
else
	mcu_send_message  "IMEI Old:...... ${old_imei}IMEI New:...... ${new_imei}"
	logger -p notice -t blue-merle-stage2 "Changed IMEI from ${old_imei} to ${new_imei}"
	sleep 5
	mkdir -p /tmp/modem.1-1.2
	echo "$new_imei" > /tmp/modem.1-1.2/modem-imei
	# prevent imei leak via the LPA
	echo "$new_imei" > /root/esim/imei
	shred -u /root/esim/log.txt # unclear if the imei/imsi will be loged here, just a precaution
fi

rm -f /tmp/old_imei

mcu_send_message "The device will shutdown now."
sleep 3
mcu_send_message "You should      change your     location before booting again."
sleep 5

i=5
until  [ $i -eq 0 ]
do
        i=$((i-1))
        mcu_send_message "Shutting down... ($i)"
        sleep 1
done

logger -p notice -t blue-merle-stage2 "Finished with Stage 2"

# Note: calling /sbin/poweroff directly results in the device rebooting into a broken state
echo '{ "poweroff": "1" }' >/dev/ttyS0